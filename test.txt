import fs from "fs";
import path from "path";
import { redirect } from "next/dist/next-server/server/api-utils";

function HomePage(props) {
  return (
    <ul>
      {props.products.map((product) => (
        <li key={product.id}>{product.title}</li>
      ))}
    </ul>
  );
}

// this code will not be seen by the clients, its good for static pages, its generated once but can be revalidated after some specified time
export async function getStaticProps() {
  const filePath = path.join(process.cwd(), "data", "dummy-backend.json");
  const jsonData = fs.readFileSync(filePath);
  const data = JSON.parse(jsonData);

  // if (data.products.length === 0) {
  //   return { notFound: true };
  // }

  // if (!data) {
  //   return {
  //     redirect: {
  //       destination: "/nodata",
  //     },
  //   };
  // }

  return {
    props: {
      products: data.products,
    },
    // revalidate: 10, //Incremental static regeneration
    // notFound: true, // true returnes a 404 page, used for cases like errors in executing any of the above
    // redirect: { destination: "/nodata" }, //could be used as a fallback if any of the above fails, to redirect the user to another page instead.
  };
}

export default HomePage;
